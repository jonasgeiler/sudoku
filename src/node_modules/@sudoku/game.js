import { cursor } from './stores/cursor';
import { difficulty } from './stores/difficulty';
import { gamePaused } from './stores/game';
import { grid } from './stores/grid';
import { timer } from './stores/timer';
import { hints } from './stores/hints';

/**
 * Start new game with a generated sudoku
 *
 * @param {('veryeasy' | 'easy' | 'medium' | 'hard')} diff - Difficulty
 */
export function startNew(diff) {
	difficulty.set(diff);
	grid.generate(diff);
	cursor.reset();
	timer.reset();
	hints.reset();

	location.hash = '';
}

export function getSudokuStringFromUrl(url) {
	// 使用 URL 和 searchParams 来提取参数
	try {
		const parsedUrl = new URL(url);

		// 检查域名和路径是否符合要求
		if (parsedUrl.hostname !== 'www.sudokuwiki.org' || parsedUrl.pathname !== '/sudoku.htm') {
			throw new Error('Invalid host or path');
		}

		const boardString = parsedUrl.searchParams.get('bd');

		// 检查 boardString 是否为 81 位数字
		if (!boardString || boardString.length !== 81 || !/^[0-9]{81}$/.test(boardString)) {
			throw new Error('Invalid or missing bd parameter');
		}

		return boardString;
	} catch (error) {
		console.error('Failed to extract Sudoku string:', error.message);
		return null;
	}
}
/**
 * Start new game with a custom sudoku
 *
 * @param {string} sencode - Sencode to decode
 */
export function startCustom(sencode) {
	sencode=getSudokuStringFromUrl(sencode)
	console.log(sencode)
	difficulty.setCustom();
	grid.decodeSencode(sencode);
	cursor.reset();
	timer.reset();
	hints.reset();
}

/**
 * Pause the game
 */
export function pauseGame() {
	timer.stop();
	gamePaused.set(true);
}

/**
 * Resume (un-pause) the game
 */
export function resumeGame() {
	timer.start();
	gamePaused.set(false);
}

export default {
	startNew,
	startCustom,
	pause: pauseGame,
	resume: resumeGame
};