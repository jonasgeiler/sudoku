import { writable, get } from 'svelte/store';
import { SimpleStrategy } from './simpleStrategy'; // 引入 SimpleStrategy 类
import { StrategyServiceImpl } from './strategies/strategyServiceImpl';

class StrategyService {
    constructor() {
        //键为gird，值为候选值
        // this.globalStrategy = new Map();
        // 初始化策略列表，包含一个 SimpleStrategy 实例
        // this.initialStrategies = new SimpleStrategy();
        this.initialStrategies = new StrategyServiceImpl();
        //const initialStrategies = [new SimpleStrategy()];
        //this.strategyList = writable(initialStrategies);
    }
    /**
     * 执行所有策略
     * @param {Array<Array<number>>} grid - 当前的数独棋盘
     * @returns {Array} - 每个策略的执行结果
     */
    execute(grid) {
        const result = this.initialStrategies.execute(grid);
        return result

        // const strategies = this.initialStrategies
        // const results = [];
        // for (const strategy of strategies) {
        //     const result = strategy.execute(grid);
        //     results.push({ name: strategy.name, result });
        // }
        // return results;
    }

    //仅测试，后续有待zhu神出手
    getStrategylist() {
        return [this.initialStrategies.name];
    }

}

export const strategyService = new StrategyService();