export class XWingStrategy {
    constructor() {}
  
    // 执行X-Wing策略
    execute(grid, candidates) {
        let newCandidates = JSON.parse(JSON.stringify(candidates)); // 深拷贝避免直接修改原数据
        // 记录总体移除的候选数
        let totalRemoved = 0;
        const maxIterOfStrategy = 1000;
        // 设置迭代上限
        for (let i = 0; i < maxIterOfStrategy; i++) {
            let xwings = this.findXWings(newCandidates);
            for (let xwing of xwings) {
                removed, newCandidates = this.removeCandidate(newCandidates, xwing);
            }
            totalRemoved += removed;
            if (xwings.length === 0 || removed === 0) {
                break;
            }
        }
      return totalRemoved, newCandidates;
    }

    removeCandidate(candidates, xwing) {
        let removed = 0;
        const [row1, col1, row2, col2, digit] = xwing;
        let newCandidates = JSON.parse(JSON.stringify(candidates)); // 深拷贝避免直接修改原数据
        for (let col=0; col<9; col++){
            if(newCandidates[row1][col].includes(digit)){
                newCandidates[row1][col] = newCandidates[row1][col].filter(d => d !== digit);
                removed++;
            }
            
            if(newCandidates[row2][col].includes(digit)){
                newCandidates[row2][col] = newCandidates[row2][col].filter(d => d !== digit);
                removed++;
            }
        }
        for (let row=0; row<9; row++){
            if(newCandidates[row][col1].includes(digit)){
                newCandidates[row][col1] = newCandidates[row][col1].filter(d => d !== digit);
                removed++;
            }
            if(newCandidates[row][col2].includes(digit)){
                newCandidates[row][col2] = newCandidates[row][col2].filter(d => d !== digit);
                removed++;
            }   
        }
        return removed, newCandidates;
    }

    findXWings(candidates) {
        const xWings = [];
        for (let digit = 1; digit <= 9; digit++) {
            for(let row1 = 0; row1 < 8; row1++) {
                for(let row2 = row1 + 1; row2 < 9; row2++) {    
                    for(let col1 = 0; col1 < 8; col1++) {
                        for(let col2 = col1 + 1; col2 < 9; col2++) {
                            if(candidates[row1][col1].includes(digit) 
                                && candidates[row1][col2].includes(digit) 
                                && candidates[row2][col1].includes(digit) 
                                && candidates[row2][col2].includes(digit)) {
                                    xWings.push([row1, col1, row2, col2, digit]);
                                }
                            }
                        }
                    }
                }
        }
        return xWings;
    
    }

  }
  
  // 示例使用
  // var strategy = new XWingStrategy();
  // var updatedCandidates = strategy.execute(grid, candidates);